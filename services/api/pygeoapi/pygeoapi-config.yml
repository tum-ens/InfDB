server:
    bind:
        host: 0.0.0.0
        port: 5000 # # <- NEEDS TO BE SET BY THE GENERATOR
    url: http://localhost:5000 # # <-  PORT NEEDS TO BE SET BY THE GENERATOR

    mimetype: application/json; charset=UTF-8
    encoding: utf-8
    gzip: false
    limit: 1000
    language: en-US
    cors: true
    pretty_print: true
    admin: false
    limits:
        default_items: 10
        max_items: 50
    map:
        url: https://tile.openstreetmap.org/{z}/{x}/{y}.png
        attribution: '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
    ogc_schemas_location: /schemas.opengis.net

logging:
    level: DEBUG


#Development team contact information [NEEDS TO BE SET MANUALLY OR BY THE GENERATOR]
metadata:
    identification:
        title: pygeoapi Demo instance - running latest GitHub version
        description: pygeoapi provides an API to geospatial data
        keywords:
            - geospatial
            - data
            - api
        keywords_type: theme
        terms_of_service: https://creativecommons.org/licenses/by/4.0/
        url: https://github.com/geopython/pygeoapi
    license:
        name: CC-BY 4.0 license
        url: https://creativecommons.org/licenses/by/4.0/
    provider:
        name: pygeoapi Development Team
        url: https://pygeoapi.io
    contact:
        name: infdb development team
        position: Developers
        address: TUM
        city: Munich
        stateorprovince: Administrative Area
        postalcode: Zip or Postal Code
        country: Canada
        phone: +xx-xxx-xxx-xxxx
        fax: +xx-xxx-xxx-xxxx
        email: you@example.org
        url: Contact URL
        hours: Hours of Service
        instructions: During hours of service.  Off on weekends.
        role: pointOfContact

#Resources template
# WE NEED AN AUTOMATED GENERATOR TO GENERATE THE RESOURCES FROM THE LOADER-CONFIG.YML
resources:
    bmp_barrierenlinie:
        type: collection
        title: barrieren table (posgis Provider)
        description: barrieren table (posgis)
        keywords:
            - barrierenlinie
        extents:
            spatial:
                bbox: [-180, -90, 180, 90]
                crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
            temporal:
                begin:
                end: null  # or empty
        providers:
            - type: feature
              name: PostgreSQL
              data:
                  host: host.docker.internal
                  port: 5432 # Default 5432 if not provided
                  dbname: citydb
                  user: citydb_user
                  password: infdb
                  search_path: [opendata] # <- IT IS THE SCHEMA NAME
              options:
                  connect_timeout: 10
                  tcp_user_timeout: 10000
                  keepalives: 1
                  keepalives_idle: 5
                  keepalives_count: 5
                  keepalives_interval: 1
              id_field: id
              table: bmp_barrierenlinie # TABLE NAME
              geom_field: geometry # <- COLUMN OF THE GEOMETRY DATA IN THE TABELE


    # hello-world:  # name of process
    #     type: process  # REQUIRED (collection, process, or stac-collection)
    #     processor:
    #         name: HelloWorld  # Python path of process definition