name: Publish qwc-qgis-server docker images

on: [push]

jobs:

    build:
      runs-on: ubuntu-latest
      steps:

      - uses: actions/checkout@master

      - name: Get version tag QGIS 3 LTR
        id: get_tag_qgis_3_ltr
        run: |
          VERSION_TRIPLE=$(curl -s https://qgis.org/ubuntu-ltr/dists/bionic/main/binary-amd64/Packages | grep -A 2 "Package: qgis-server$" | grep Version | sed 's/^Version: 1:\(.*\)+.*/\1/')
          VERSION_MINOR=$(curl -s https://qgis.org/ubuntu-ltr/dists/bionic/main/binary-amd64/Packages | grep -A 2 "Package: qgis-server$" | grep Version | sed 's/^Version: 1:\([0-9]*\.[0-9]*\).*/\1/')
          echo ::set-output name=tags::$VERSION_TRIPLE,$VERSION_MINOR

      - name: Build and publish docker image for QGIS Server 3 LTR
        uses: elgohr/Publish-Docker-Github-Action@2.12
        env:
          URL_PREFIX: /ows
        with:
          name: sourcepole/qwc-qgis-server
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tags: "${{ steps.get_tag_qgis_3_ltr.outputs.tags }}"
          workdir: qgis-server
          dockerfile: Dockerfile-ltr
          buildargs: URL_PREFIX

      - name: Get version tag QGIS 3
        id: get_tag_qgis_3
        run: |
          VERSION_TRIPLE=$(curl -s https://qgis.org/ubuntu/dists/focal/main/binary-amd64/Packages | grep -A 2 "Package: qgis-server$" | grep Version | sed 's/^Version: 1:\(.*\)+.*/\1/')
          VERSION_MINOR=$(curl -s https://qgis.org/ubuntu/dists/focal/main/binary-amd64/Packages | grep -A 2 "Package: qgis-server$" | grep Version | sed 's/^Version: 1:\([0-9]*\.[0-9]*\).*/\1/')
          echo ::set-output name=tags::$VERSION_TRIPLE,$VERSION_MINOR,latest

      - name: Build and publish docker image for QGIS Server 3
        uses: elgohr/Publish-Docker-Github-Action@2.12
        env:
          URL_PREFIX: /ows
        with:
          name: sourcepole/qwc-qgis-server
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tags: "${{ steps.get_tag_qgis_3.outputs.tags }}"
          workdir: qgis-server
          buildargs: URL_PREFIX

      - name: Get version tag QGIS 2
        id: get_tag_qgis_2
        run: |
          VERSION_TRIPLE=$(curl -s https://qgis.org/ubuntu-ltr/dists/xenial/main/binary-amd64/Packages | grep -A 2 "Package: qgis-server$" | grep Version | sed 's/^Version: 1:\(.*\)+.*/\1/')
          VERSION_MINOR=$(curl -s https://qgis.org/ubuntu-ltr/dists/xenial/main/binary-amd64/Packages | grep -A 2 "Package: qgis-server$" | grep Version | sed 's/^Version: 1:\([0-9]*\.[0-9]*\).*/\1/')
          echo ::set-output name=tags::$VERSION_TRIPLE,$VERSION_MINOR

      - name: Build and publish docker image for QGIS Server 2
        uses: elgohr/Publish-Docker-Github-Action@2.12
        env:
          URL_PREFIX: /ows
        with:
          name: sourcepole/qwc-qgis-server
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tags: "${{ steps.get_tag_qgis_2.outputs.tags }}"
          workdir: qgis-server
          dockerfile: Dockerfile-qgis2
          buildargs: URL_PREFIX
