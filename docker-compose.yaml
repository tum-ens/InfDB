version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: database-app
    ports:
      - "8000:8000"  # Map container port 8000 to host port 8000
    depends_on:
      timescaledb:
        condition: service_healthy
      citydb:
        condition: service_healthy
    networks:
      - networkName
    environment:
        # TimescaleDB Configuration
        # i cant use 127.0.0.1 in the container because it means local host!
      -  TIMESCALE_USER=timescale_user
      -  TIMESCALE_PASSWORD=secret
      -  TIMESCALE_HOST=host.docker.internal
      -  TIMESCALE_PORT=5432
      -  TIMESCALE_DB=timescaledb_db

        # CityDB Configuration
      -  CITYDB_USER=citydb_user
      -  CITYDB_PASSWORD=citydb_password
      -  CITYDB_HOST=host.docker.internal
      -  CITYDB_PORT=5433
      -  CITYDB_DB=citydb

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_DB: timescaledb_db
      POSTGRES_USER: timescale_user
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U timescale_user -d timescaledb_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - networkName

  citydb:
    image: 3dcitydb/3dcitydb-pg:latest
    container_name: citydb
    environment:
      POSTGRES_DB: citydb
      POSTGRES_USER: citydb_user        
      POSTGRES_PASSWORD: citydb_password
      SRID: 4326
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U citydb_user -d citydb"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - citydb_data:/var/lib/postgresql/data
    networks:
      - networkName

volumes:
  timescale_data:
  citydb_data:

networks:
  networkName:
   name: database